MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 #include "p16f877a.inc"
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Mar 17 2019
                      00005 ;  MPASM PIC16F877A processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00567         LIST
                      00002 
                      00003 #define XINPUT PORTA,1 ; датчик X
                      00004 #define YINPUT PORTA,4 ; датчик Y
                      00005 ; выводы двигателя X    
                      00006 #define TRX    PORTB,0
                      00007 #define BLX    PORTB,1
                      00008 #define BRX    PORTB,2
                      00009 #define TLX    PORTB,3
                      00010 ; выводы двигателя Y    
                      00011 #define TRY    PORTD,4
                      00012 #define BLY    PORTD,5
                      00013 #define BRY    PORTD,6
                      00014 #define TLY    PORTD,7
                      00015 ; выводы ЦАП    
                      00016 #define DACON  PORTE,0 ; вывод !SYNC
                      00017 #define DACCLK PORTE,1 ; вывод SCLK
                      00018 #define DACDIN PORTE,2 ; вывод DIN
                      00019     
                      00020 #define CHANGE_LASER PORTC,0 ;светодиод замены лазера
                      00021 ; CONFIG
                      00022 ; __config 0xFF3A
2007   3F3A           00023     __CONFIG _FOSC_HS & _WDTE_OFF & _PWRTE_OFF & _BOREN_OFF & _LVP_OFF & _CPD_OFF & _WRT_OFF & _CP_OFF 
                      00024     
                      00025     org     0x00
0000   2???           00026     goto    start ;обход подпрограммы прерывания
                      00027     org     0x04
0004   2???           00028     goto    Interrupt
                      00029 
0005                  00030 start:
0005   2???           00031     call    init    
                      00032     ;TR + = +90
                      00033     ;BL + = +180
                      00034     ;BR + = +270
                      00035     ;TL + = +360
                      00036     
                      00037     ;BR + = -90
                      00038     ;BL + = -180
                      00039     ;TR + = -270
                      00040     ;TL + = -360
                      00041     
0006   0186           00042     clrf    PORTB
0007   01C9           00043     clrf    tmr
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008                  00044 calibration:
0008   142E           00045     bsf     cal,0       ; установка флагов калибровки
0009   14AE           00046     bsf     cal,1
000A   152E           00047     bsf     cal,2
000B   15AE           00048     bsf     cal,3
000C   3088           00049     movlw   b'10001000' ;установка начального значения для ШД
000D   0088           00050     movwf   PORTD
000E   0086           00051     movwf   PORTB
000F   01AF           00052     clrf    DAC_buffer+0 ;очистка буфера для ЦАП
0010   01B0           00053     clrf    DAC_buffer+1
0011   170B           00054     bsf     INTCON,     PEIE ;разрешим прерывания
0012   178B           00055     bsf     INTCON, GIE
0013   1618           00056     bsf     RCSTA,      CREN
0014   1798           00057     bsf     RCSTA,  SPEN
0015   151F           00058     bsf     ADCON0,2
0016   2???           00059     goto    USART_ready
                      00060 ;-------------------------------------------------------------------------------
                      00061 ;    
                      00062 ;   Узел графа 00
                      00063 ;    
                      00064 ;-------------------------------------------------------------------------------    
0017                  00065 USART_ready: ;конец инициализации, ждем команд по USART
                      00066 
                      00067     errorlevel -302
0017   3024           00068     movlw   0x24    ;отправим приглашение на ввод команд
0018   0099           00069     movwf   TXREG
0019   1683 1303      00070     banksel TXSTA
001B   1698           00071     bsf     TXSTA,TXEN
001C   1283 1303      00072     banksel TXREG
                      00073     errorlevel +302
001E   11AE           00074     bcf     cal,3
                      00075     
001F                  00076 USART_cycle: ;цикл ожидания приема байта по USART
001F   1D20           00077     btfss   Flags, 2
0020   2???           00078     goto    USART_cycle
0021   1820           00079     btfsc   Flags, 0
0022   2???           00080     goto    Two_bytes
0023                  00081 One_byte: ;был принят один байт
                      00082     ;0x20 - пробел
                      00083     ;0xD  - enter
0023   1103           00084     bcf     STATUS,Z
0024   082A           00085     movf    buffer,W
0025   3A0D           00086     xorlw   0xD     ;Enter является символом-терминатором для команды
0026   1903           00087     btfsc   STATUS, Z
0027   2???           00088     goto    Got_command ;Получен Enter, идем выполнять разбор полученных данных
                      00089     ;полученная команда не является Enter'ом, проверим какой по счету байт пришел
0028   1103           00090     bcf     STATUS,Z    
0029   082C           00091     movf    counter,W
002A   3A01           00092     xorlw   .1
002B   1903           00093     btfsc   STATUS,Z
002C   2???           00094     goto    Got_XYZF    ;первый байт - выбор двигателя
                      00095     
002D   3A03           00096     xorlw   .1 ^ .2
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002E   1903           00097     btfsc   STATUS,Z
002F   2???           00098     goto    Got_move1   ;второй байт - четвертый разряд количества шагов (X000)
                      00099     
0030   3A01           00100     xorlw   .2 ^ .3
0031   1903           00101     btfsc   STATUS,Z
0032   2???           00102     goto    Got_move2   ;третий байт - третий разряд количества шагов (0X00)
                      00103     
0033   3A07           00104     xorlw   .3 ^ .4
0034   1903           00105     btfsc   STATUS,Z
0035   2???           00106     goto    Got_move3   ;четвертый байт -  второй разряд количества шагов (00X0)
                      00107     
0036   3A01           00108     xorlw   .4 ^ .5
0037   1903           00109     btfsc   STATUS,Z
0038   2???           00110     goto    Got_move4   ;пятый байт - первый разряд количества шагов (000X)
                      00111     
0039   3A03           00112     xorlw   .5 ^ .6
003A   1903           00113     btfsc   STATUS,Z
003B   2???           00114     goto    Got_dir     ; шестой байт - выбор направления + или -
                      00115     
003C   3A01           00116     xorlw   .6 ^ .7
003D   1903           00117     btfsc   STATUS,Z
003E   2???           00118     goto    Got_laser
003F   2???           00119     goto    Got_command ; седьмой байт - включить или выключить лазер
                      00120     
0040                  00121 Got_XYZF:   ;первый байт запишем из буфера в регистр команд "как есть" 
0040   082A           00122     movf    buffer+0,W
0041   00A1           00123     movwf   XYZFcmd
0042   2???           00124     goto    Next_byte
0043                  00125 Got_move1:      ;следующие четыре байта обработаем вычитая ASCII код символа
0043   3030           00126     movlw   0x30  ;чтобы получить число от 0 до 9 и запишем число во временный регистр
0044   022A           00127     subwf   buffer+0,W
0045   00A9           00128     movwf   var+3
0046   2???           00129     goto    Next_byte
0047                  00130 Got_move2:
0047   3030           00131     movlw   0x30
0048   022A           00132     subwf   buffer+0,W
0049   00A8           00133     movwf   var+2
004A   2???           00134     goto    Next_byte
004B                  00135 Got_move3:
004B   3030           00136     movlw   0x30
004C   022A           00137     subwf   buffer+0,W
004D   00A7           00138     movwf   var+1
004E   2???           00139     goto    Next_byte
004F                  00140 Got_move4:
004F   3030           00141     movlw   0x30
0050   022A           00142     subwf   buffer+0,W
0051   00A6           00143     movwf   var+0
0052   2???           00144     goto    Next_byte
0053                  00145 Got_dir:    ;шестой байт запишем "как есть"
0053   082A           00146     movf    buffer+0,W
0054   00A4           00147     movwf   DIRcmd
0055   2???           00148     goto    Next_byte
0056                  00149 Got_laser:  ;седьмой байт запишем "как есть"
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0056   082A           00150     movf    buffer+0,W
0057   00A5           00151     movwf   LASERcmd
0058   2???           00152     goto    Next_byte
0059                  00153 Next_byte:  ;очистим буфер и флаги для приема следующего байта
0059   01AA           00154     clrf    buffer+0
005A   01AB           00155     clrf    buffer+1
005B   1020           00156     bcf     Flags,0
005C   10A0           00157     bcf     Flags,1
005D   1120           00158     bcf     Flags,2
005E   2???           00159     goto    USART_cycle
005F                  00160 Two_bytes:;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
005F   01AA           00161     clrf    buffer+0
0060   01AB           00162     clrf    buffer+1
0061   1020           00163     bcf     Flags,0
0062   10A0           00164     bcf     Flags,1
0063   1120           00165     bcf     Flags,2
0064   2???           00166     goto    USART_cycle
0065                  00167 Got_command: ;все команды получены (пришел Enter), очистим буфер и 
                      00168              ;подготовимся к составлению задания для прерывания
0065   01AA           00169     clrf    buffer+0
0066   01AB           00170     clrf    buffer+1
0067   01AC           00171     clrf    counter
                      00172 
                      00173     ;посчитаем количество шагов. счет выполняется умножением на константу с помощью сдвига и сложения
                      00174     ;рассчет сдвигов и сложений для умножения на 1000. 4 в качестве примера
                      00175     ; 4*1000 представим как:
                      00176     ; 4<<9 = 2048
                      00177     ; 4<<8 = 1024
                      00178     ; 4<<7 = 512
                      00179     ; 4<<6 = 256
                      00180     ; 4<<5 = 128
                      00181     ; 4<<3 = 32
                      00182     ; 2048+1024+512+256+128+32 = 4000 
0068   3005           00183     movlw   .5  ;количество прогонов цикла
0069   00C8           00184     movwf   temp
006A                  00185 Step_counter1:  ;умножение на 1000
006A   0848           00186     movf    temp,W
006B   3E04           00187     addlw   .4  ;компенсация разницы между количеством прогонов цикла и степенью двойки
006C   00AC           00188     movwf   counter
006D   0829           00189     movf    var+3,W
006E   00AA           00190     movwf   buffer+0
006F   2???           00191     call    Calc ;вызовем функцию сдвига и сложения
0070   0BC8           00192     decfsz  temp,f
0071   2???           00193     goto    Step_counter1
                      00194     
0072   3003           00195     movlw   .3
0073   00AC           00196     movwf   counter
0074   0829           00197     movf    var+3,W
0075   00AA           00198     movwf   buffer+0
0076   2???           00199     call    Calc
                      00200     ; рассчет сдвигов и сложений для умножения на 100. 4 в качестве примера
                      00201     ; 4*100 представим как:
                      00202     ; 4<<6 = 256 
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     ; 4<<5 = 128
                      00204     ; 4<<2 = 16
                      00205     ; 256+128+16 = 400
0077                  00206 Step_counter2:  ;умножение на 100
0077   3006           00207     movlw   .6
0078   00AC           00208     movwf   counter
0079   0828           00209     movf    var+2,W
007A   00AA           00210     movwf   buffer+0
007B   2???           00211     call    Calc
                      00212     
007C   3005           00213     movlw   .5
007D   00AC           00214     movwf   counter
007E   0828           00215     movf    var+2,W
007F   00AA           00216     movwf   buffer+0
0080   2???           00217     call    Calc
                      00218     
0081   3002           00219     movlw   .2
0082   00AC           00220     movwf   counter
0083   0828           00221     movf    var+2,W
0084   00AA           00222     movwf   buffer+0
0085   2???           00223     call    Calc
                      00224     ;рассчет сдвигов и сложений для умножения на 10. 4 в качестве примера
                      00225     ;4*10 представим как:
                      00226     ; 4<<5 = 32
                      00227     ; 4<<1 = 8
                      00228     ; 32 + 4 = 40
0086                  00229 Step_counter3:  ;умножение на 10
0086   3003           00230     movlw   .3
0087   00AC           00231     movwf   counter
0088   0827           00232     movf    var+1,W
0089   00AA           00233     movwf   buffer+0
008A   2???           00234     call    Calc
                      00235     
008B   3001           00236     movlw   .1
008C   00AC           00237     movwf   counter
008D   0827           00238     movf    var+1,W
008E   00AA           00239     movwf   buffer+0
008F   2???           00240     call    Calc
0090                  00241 Step_counter4:  ; сложение разряда единиц
0090   1003           00242     bcf     STATUS,C
0091   0826           00243     movf    var+0,W
0092   07A2           00244     addwf   MOVEcmd+0,f
0093   1803           00245     btfsc   STATUS,C
0094   0AA3           00246     incf    MOVEcmd+1,f
                      00247 
0095                  00248 Work:
                      00249     ;выполним разбор полученных команд для определения направления движения двигателей
                      00250     ;X горизонталь
                      00251     ;Y вертикаль
                      00252     ;Z диагональ слева направо /
                      00253     ;F диагональ справа налево \
                      00254     ;+ или - определяют направление движения. для X/Y движение по часовой стрелке либо против часовой ст
                            релки
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00255     ;для Z/F движение снизу вверх либо сверху вниз
0095   01A0           00256     clrf    Flags
0096   1103           00257     bcf     STATUS,Z
0097   0821           00258     movf    XYZFcmd,W
0098   3A58           00259     xorlw   'X'
0099   1903           00260     btfsc   STATUS, Z
009A   2???           00261     goto    X
                      00262     
009B   3A01           00263     xorlw   'X' ^ 'Y'
009C   1903           00264     btfsc   STATUS,Z
009D   2???           00265     goto    Y
                      00266     
009E   3A03           00267     xorlw   'Y' ^ 'Z'
009F   1903           00268     btfsc   STATUS,Z
00A0   2???           00269     goto    Z_symbol
                      00270     
00A1   3A1C           00271     xorlw   'Z' ^ 'F'
00A2   1903           00272     btfsc   STATUS,Z
00A3   2???           00273     goto    F_symbol
00A4                  00274 X:
00A4   11A0           00275     bcf     Flags,3
00A5   2???           00276     goto    Detect_direction
00A6                  00277 Y:
00A6   15A0           00278     bsf     Flags,3
00A7   2???           00279     goto    Detect_direction
00A8                  00280 Z_symbol:  
00A8   11A0           00281     bcf     Flags,3
00A9   1620           00282     bsf     Flags,4
00AA   2???           00283     goto    Detect_direction
00AB                  00284 F_symbol:  
00AB   15A0           00285     bsf     Flags,3
00AC   1620           00286     bsf     Flags,4
00AD                  00287 Detect_direction: ;определение + или -
00AD   1103           00288     bcf     STATUS,Z
00AE   302B           00289     movlw   '+'
00AF   0624           00290     xorwf   DIRcmd,W
00B0   1903           00291     btfsc   STATUS,Z
00B1   2???           00292     goto    Plus_setup ;получен +, выполним переход
                      00293 
00B2                  00294 Minus_setup:; ; при Z(10) 11 / при F(11) 01 \
00B2   16A0           00295     bsf     Flags,5
00B3   1DA0           00296     btfss   Flags,3
00B4   1720           00297     bsf     Flags,6
00B5   2???           00298     goto    Detect_laser
00B6                  00299 Plus_setup: ;при Z(10) 00 / при F(11) 10 \ 
00B6   19A0           00300     btfsc   Flags,3
00B7   1720           00301     bsf     Flags,6
00B8                  00302 Detect_laser: ;если получен Y - лазер включить, если что-либо другое - лазер выключить
00B8   1103           00303     bcf     STATUS,Z
00B9   3059           00304     movlw   'Y'
00BA   0625           00305     xorwf   LASERcmd,W
00BB   1903           00306     btfsc   STATUS,Z
00BC   17A0           00307     bsf     Flags,7         ;установка флага лазер ВКЛ
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00BD   14A0           00308     bsf     Flags,1         ;установка флага разрешения отработки команды
                      00309    
00BE                  00310 Wait: ;цикл ожидания отработки задания
00BE   1C2D           00311     btfss   work_done,0
00BF   2???           00312     goto    Wait
00C0   1285           00313     bcf     PORTA,5
                      00314     errorlevel -302
00C1   1683 1303      00315     banksel TXSTA
00C3   1698           00316     bsf     TXSTA,TXEN
00C4   1283 1303      00317     banksel TXREG
00C6   3024           00318     movlw   0x24    ;команда выполнена, сообщим о ожидании новой
00C7   0099           00319     movwf   TXREG
                      00320     errorlevel +302
                      00321     ;очистим все флаги и буферы для приема новой команды
00C8   102D           00322     bcf     work_done,0
00C9   01A0           00323     clrf    Flags
00CA   01A1           00324     clrf    XYZFcmd
00CB   01A2           00325     clrf    MOVEcmd+0
00CC   01A3           00326     clrf    MOVEcmd+1
00CD   01A4           00327     clrf    DIRcmd
00CE   01A5           00328     clrf    LASERcmd
00CF   01A6           00329     clrf    var+0
00D0   01A7           00330     clrf    var+1
00D1   01A8           00331     clrf    var+2
00D2   01A9           00332     clrf    var+3
00D3   01AC           00333     clrf    counter
00D4   01AA           00334     clrf    buffer+0
00D5   01AB           00335     clrf    buffer+1
                      00336     
00D6   2???           00337     goto    USART_cycle
                      00338     
                      00339 ;-------------------------------------------------------------------------------
                      00340 ;    
                      00341 ;  Конец узла графа 00
                      00342 ;    
                      00343 ;-------------------------------------------------------------------------------    
                      00344 ;*******************************************************************************
                      00345 ;
                      00346 ;       ФУНКЦИИ
                      00347 ;
                      00348 ;*******************************************************************************    
                      00349     ORG     0x0400   
                      00350 
                      00351 ;*******************************************************************************
                      00352 ;       Calc
                      00353 ;-------------------------------------------------------------------------------
                      00354 ; Выполняет сдвиг и сложение чисел
                      00355 ; На входе:
                      00356 ;       buffer+0 - число от 0 до 9
                      00357 ;       counter  - счетчик сдвигов
                      00358 ; На выходе:
                      00359 ;       MOVEcmd - результат операций (Word)
                      00360 ;-------------------------------------------------------------------------------
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0400                  00361 Calc:
0400   1003           00362     bcf     STATUS,C
0401   0DAA           00363     rlf     buffer+0,f
0402   0DAB           00364     rlf     buffer+1,f
0403   0BAC           00365     decfsz  counter,f
0404   2???           00366     goto    Calc
                      00367 
0405   1003           00368     bcf     STATUS,C
0406   082A           00369     movf    buffer+0,W
0407   07A2           00370     addwf   MOVEcmd+0,f
0408   082B           00371     movf    buffer+1,W
0409   1803           00372     btfsc   STATUS,C
040A   0F2B           00373     incfsz  buffer+1,W
040B   07A3           00374     addwf   MOVEcmd+1,f
040C   01AA           00375     clrf    buffer+0
040D   01AB           00376     clrf    buffer+1
040E   0008           00377     return
                      00378 #include "Init.inc"
                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;       ИНИЦИАЛИЗАЦИЯ    РЕГИСТРОВ   МИКРОКОНТРОЛЛЕРА  PIC16F628A
                      00004 ;
                      00005 ;*******************************************************************************
                      00006     
040F                  00007 init:
                      00008     errorlevel -302 ;не напоминать что банк не 0
                      00009     ;--------------------------------------------------------------------------
                      00010     ;   BANK 0
                      00011     ;--------------------------------------------------------------------------
040F   1283           00012     bcf     STATUS, RP0
0410   1303           00013     bcf     STATUS, RP1     ;переход в банк 0 для доступа к регистрам банка 0
                      00014     ;INDF - обращение к регистру , адрес которого записан в FSR
0411   3064           00015     movlw .100
0412   0081           00016     movwf TMR0 ;подстройка TMR0
                      00017     ;PCL - младшие биты счетчика команд
0413   0183           00018     clrf    STATUS          ;очистим STATUS
                      00019     ;FSR - регистр адреса при косвенной адресации
                      00020     ;настроим начальные уровни на выходах портов вывода
0414   0185           00021     clrf    PORTA 
0415   0186           00022     clrf    PORTB
0416   0187           00023     clrf    PORTC
0417   0188           00024     clrf    PORTD
0418   0189           00025     clrf    PORTE
0419   018A           00026     clrf    PCLATH          ;Подтвердим нулевое значеие в регистре защелке
                      00027                             ;старших битов адреса команд
041A   3020           00028     movlw   b'00100000'     ;запрет прерываний всем кроме TMR0
041B   008B           00029     movwf   INTCON
                      00030     ;PIR1       ;флаги прерываний
                      00031     ;PIR2       ;флаги прерываний EEPROM
                      00032     ;TMR1L - младшие биты TMR1
                      00033     ;TMR1H - старшие биты TMR1 
041C   3031           00034     movlw b'00110001'
041D   0090           00035     movwf T1CON ;1:8, Fosc/4, TMR1 ON, gen OFF, sync off
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00036     ;TMR2 - регистр таймера 2
                      00037     ;T2CON
                      00038     ;SSPBUF
                      00039     ;SSPCON
                      00040     ;CCPR1L - младший байт ШИМ CCP1
                      00041     ;CCPR1H - старший байт ШИМ CCP1
041E   3000           00042     movlw   b'00000000'     ;выключаем ШИМ CCP1
041F   0097           00043     movwf   CCP1CON
0420   3090           00044     movlw   b'10010000'     ;USART ON, 8 разрядов
0421   0098           00045     movwf    RCSTA          
                      00046     ;TXREG - регистр данных передатчика USART
                      00047     ;RXREG - регистр данных приемника USART
                      00048     ;CCPR2L - младший байт ШИМ CCP2
                      00049     ;CCPR2H - тарший байт ШИМ CCP2
                      00050     ;CPP2CON
                      00051     ;ADRESH
0422   3081           00052     movlw b'10000001' ;Fosc/32,RA0,DONE,ADC On
0423   009F           00053     movwf ADCON0
                      00054     ;--------------------------------------------------------------------------
                      00055     ;   BANK 1
                      00056     ;--------------------------------------------------------------------------
                      00057     
0424   1683           00058     bsf     STATUS, RP0
                      00059     ;INDF - обращение к регистру , адрес которого записан в FSR
0425   30D7           00060     movlw   b'11010111'
0426   0081           00061     movwf   OPTION_REG ;Предделитель перед TMR0 коэффициент 1:256
                      00062     ;PCL - младшие биты счетчика команд
                      00063     ;STATUS 
                      00064     ;FSR - регистр адреса при косвенной адресации
0427   301F           00065     movlw   b'00011111'     ; 0,1,2,3,4 - входы
0428   0085           00066     movwf   TRISA
0429   3000           00067     movlw   b'00000000'     ; все выходы
042A   0086           00068     movwf   TRISB
042B   30C0           00069     movlw   b'11000000'     ;6,7 - входы для USART
042C   0087           00070     movwf   TRISC
042D   3000           00071     movlw   b'00000000' ; все выходы
042E   0088           00072     movwf   TRISD
042F   3000           00073     movlw   b'00000000' ;все выходы
0430   0089           00074     movwf   TRISE
                      00075     ;PCLATH
                      00076     ;INTCON
                      00077     ;;;;clrf    PIE1 & 0x7F         ;запретили все периферийные прерывания
                      00078     
0431   018C           00079     clrf    PIE1            ;запрет прерываний 
0432   168C           00080     bsf PIE1, RCIE          ;разрешим прерывания приемника USART
0433   160C           00081     bsf PIE1, TXIE          ;разрешим прерывания передатчика USART
0434   170C           00082     bsf PIE1, ADIE          ;разрешим прерывания по окончанию преобразования АЦП
0435   140C           00083     bsf PIE1, TMR1IE        ;разрешим прерывания TMR1
0436   018D           00084     clrf    PIE2            ;запрет всех прерываний EEPROM
                      00085     ;PCON
                      00086     ;SSPCON2
                      00087     ;PR2 - регистр периода TMR2
                      00088     ;SSPADD    -регистр адреса/регистр генератора скорости обмена
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00089     ;SSPSTAT
0437   30A6           00090     movlw   b'10100110' ;внутренний CLK, 8 bit, async, hi-speed
0438   0098           00091     movwf   TXSTA ;- Регистр управления и статуса USART
0439   3081           00092     movlw   b'10000001'
043A   0099           00093     movwf   SPBRG ; регистр генератора скорости USART, 129 = 9600 бод, ошибка 0,16%
                      00094     ;ADRESL
043B   300F           00095     movlw   b'00001111' ;левое выравнивание ADRESL (00xxxxxx), RA3-RA2 +- Vref
043C   009F           00096     movwf   ADCON1
                      00097     
                      00098     ;--------------------------------------------------------------------------
                      00099     ;   BANK 2
                      00100     ;--------------------------------------------------------------------------
                      00101     ;bcf STATUS, RP0
                      00102     ;bsf STATUS, RP1
                      00103     ;INDF - обращение к регистру , адрес которого записан в FSR
                      00104     ;TMR0 - регистр таймера TMR0
                      00105     ;PCL - младшие биты счетчика команд
                      00106     ;STATUS
                      00107     ;FSR - регистр адреса при косвенной адресации
                      00108     ;PORTB - запись в выходную защелку PORTB, чтение состояния выводов PORTB
                      00109     ;PCLATH - старшие биты счетчика команд
                      00110     ;INTCON
                      00111     ;EEDATA - регистр данных, младший байт
                      00112     ;EEADDR - регистр адреса, младший байт
                      00113     ;EEDATH
                      00114     ;EEADRH
                      00115     
                      00116     ;--------------------------------------------------------------------------
                      00117     ;   BANK 3
                      00118     ;--------------------------------------------------------------------------
                      00119     ;bsf STATUS, RP0
                      00120     ;bsf STATUS, RP1
                      00121     ;INDF - обращение к регистру , адрес которого записан в FSR
                      00122     ;OPTION_REG
                      00123     ;PCL - младшие биты счетчика команд
                      00124     ;STATUS
                      00125     ;FSR - регистр адреса при косвенной адресации
                      00126     ;TRISB - направление выводов PORTB
                      00127     ;PCLATH - старшие биты счетчика команд
                      00128     ;INTCON
                      00129     ;EECON1 - регистр управления 1
                      00130     ;EECON2 - регистр управления 2
043D   1283           00131     bcf     STATUS, RP0
043E   1303           00132     bcf     STATUS, RP1     ;возврат в BANK 0 
                      00133 
                      00134 
043F   0008           00135     return
                      00136 
                      00137 #INCLUDE Memory.inc 
                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;       ПЕРЕМЕННЫЕ
                      00004 ;
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00005 ;*******************************************************************************
                      00006     cblock  0x20
  00000020            00007         Flags       ;регистр флагов 
  00000021            00008         XYZFcmd     ;регистр выбора направления движения
  00000022            00009         MOVEcmd :2  ;регистр количества шагов
  00000024            00010         DIRcmd      ;регистр выбора направления
  00000025            00011         LASERcmd    ;регистр включения лазера
  00000026            00012         var :4      ;регистр временного хранения количества шагов
  0000002A            00013         buffer :2   ;буфер для промежуточного хранения
  0000002C            00014         counter     ;счетчик принятых байт
  0000002D            00015         work_done   ; сделана ли работа прерывающей программой
  0000002E            00016         cal         ;задание на калибровку
  0000002F            00017         DAC_buffer :2 ;буффер для ЦАП
  00000031            00018         DAC_temp :2 ;временный регистр для записи в ЦАП
                      00019     endc            ;0x39
                      00020     cblock      0x45        ; регистры для задержки
  00000045            00021         d1
  00000046            00022         d2
  00000047            00023         d3
                      00024     endc                    ;0x47
  00000048            00025 temp equ  0x48              ; временный буфффер
  00000049            00026 tmr  equ  0x49              ; регистр состояния прерывания tmr1
                      00027     cblock      0x70 ;Регистры для сохранения контекста при обработке прерывания
  00000070            00028         W_TEMP_
  00000071            00029         STATUS_TEMP
  00000072            00030         PCLATH_TEMP
  00000073            00031         FSR_osn
  00000074            00032         FSR_prer
                      00033     endc           ;0x74
                      00034     
                      00035     ;Flags 00000000
                      00036     ;      ||||||||
                      00037     ;      |||||||-----Произошла переполнения буфера (OERR)               bit 0
                      00038     ;      ||||||------Разрешение обрабатывать задание для прерывания     bit 1
                      00039     ;      |||||-------Принят байт, требуется обработка                   bit 2
                      00040     ;      ||||--------Двигатель X/Y(0/1)                                 bit 3
                      00041     ;      |||---------Оба двигателя (диагональ)                          bit 4
                      00042     ;      ||----------Комбинация направления(мл. бит)                    bit 5
                      00043     ;      |-----------Комбинация направления(ст. бит)                    bit 6
                      00044     ;      ------------Выкл/Вкл лазер (0/1)                               bit 7
                      00045     ;Комбинация направления:
                      00046     ;00 - по часовой оба                 (/ снизу вверх)
                      00047     ;01 - по часовой X, Y против часовой (\ сверху вниз) 
                      00048     ;10 - X против часовой, Y по часовой (\ снизу ввверх)
                      00049     ;11 - против часовой оба             (/сверху вниз)
                      00138 ; Init End ---------------------------------------------------------------------
                      00139 
                      00140 
                      00141 
                      00142 
                      00143 
                      00379 #include "Interrupt.inc"
                      00001 ;*******************************************************************************
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00002 ;
                      00003 ;       Подпрограмма обработки прерываний
                      00004 ;
                      00005 ;*******************************************************************************
                      00006 
0440                  00007 Interrupt:
0440   00F0           00008     movwf       W_TEMP_          ;запись содержимого аккумулятора W в 
                      00009                                  ;регистр W_TEMP
0441   0E03           00010     swapf       STATUS,W         ;обменять местами полубайты регистра STATUS и
                      00011                                  ;с записью в W
0442   0183           00012     clrf        STATUS           ;очистка регистра STATUS, выбрать 0-й банк
0443   00F1           00013     movwf       STATUS_TEMP      ;запись содержимого аккумулятора W в
                      00014                                  ;регистр W_TEMP
                      00015 
                      00016                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00017                                  ;в случае если размер кода превышает 2048 слов:
0444   080A           00018     movf        PCLATH,W         ;запись содержимого регистра PCLATH в
0445   00F2           00019     movwf       PCLATH_TEMP      ;регистр PCLATH_TEMP
0446   018A           00020     clrf        PCLATH           ;очистка регистра PCLATH
                      00021                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00022 
                      00023                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00024                                  ;при использовании косвенной адресации:
0447   0804           00025     movf        FSR,W            ;запись содержимого регистра FSR в
0448   00F3           00026     movwf       FSR_osn          ;регистр FSR_osn
0449   0874           00027     movf        FSR_prer,W       ;запись содержимого регистра FSR_prer в
044A   0084           00028     movwf       FSR              ;регистр FSR
                      00029                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00030                                  
                      00031 ;-------------------------------------------------------------------------------
044B                  00032 TMR0_check:
044B   190B           00033     btfsc   INTCON,T0IF ;было ли прерывание от TMR0
044C   1E8B           00034     btfss   INTCON,T0IE ;разрешено ли прерывание
044D   2???           00035     goto    TMR0_skip
044E   18A0           00036     btfsc   Flags,1
044F   2???           00037     goto    Command_move        ;есть задание, переходим к управлению ШД
0450   182E           00038     btfsc   cal,0
0451   2???           00039     goto    calX                ;задание на калибровку двигателя X
0452   18AE           00040     btfsc   cal,1
0453   2???           00041     goto    calY                ;задание на калибровку двигателя Y
0454   192E           00042     btfsc   cal,2
0455   2???           00043     goto    calLaser            ;задание на калибровку лазера
0456   18C9           00044     btfsc   tmr,1
0457   1449           00045     bsf     tmr,0
0458   110B           00046     bcf     INTCON,T0IF ;сбросим флаг прерывания
0459   18C9           00047     btfsc   tmr,1
045A   2???           00048     goto    calLaser
045B                  00049 TMR0_skip:
045B                  00050 TMR1_check:
045B   1C0C           00051     btfss   PIR1,TMR1IF         ;было ли прерывание от TMR1
045C   2???           00052     goto    TMR1_skip
045D   18C9           00053     btfsc   tmr,1
045E   1449           00054     bsf     tmr,0
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

045F   100C           00055     bcf     PIR1,TMR1IF
0460   18C9           00056     btfsc   tmr,1
0461   2???           00057     goto    calLaser
0462                  00058 TMR1_skip:
0462                  00059 ADC_check:
0462   1F0C           00060     btfss   PIR1,ADIF           ;было ли прерывание от АЦП
0463   2???           00061     goto    TX_check
0464   191F           00062     btfsc   ADCON0,2            ; установлен ли бит GO/-DONE
0465   2???           00063     goto    TX_check
                      00064     
0466   192E           00065     btfsc   cal,2                       ;если задание на калибровку лазера, установим 25% мощности
0467   2???           00066     goto    V1_24
                      00067     
0468   1CA0           00068     btfss   Flags,1
0469   2???           00069     goto    calLaser ;если задания на работу нет, запустим новое преобразование
046A                  00070 V5_0: ;проверка на равенство 100% при рабочем режиме
                      00071     
046A   081E           00072     movf    ADRESH,W
046B   3E0C           00073     addlw   -.244
046C   3EFA           00074     addlw   -(.249 - .244 + 1)
046D   1C03           00075     btfss   STATUS,C
046E   2???           00076     goto    calLaser ;если 90 < Wл < 95, запустим новое преобразование
                      00077     
046F   081E           00078     movf    ADRESH,W ; проверка если Wл < 89%
0470   3E00           00079     addlw   -.0
0471   3E0C           00080     addlw   -(.243 - .0 + 1)
0472   1C03           00081     btfss   STATUS,C
0473   2???           00082     goto    DAC_inc ;Wл < 89%, увеличим напряжение на ЦАП
                      00083     
                      00084     ;значение 95 < Wл < 100, уменьшим до рабочего режима
0474   2???           00085     goto    DAC_dec
                      00086     
0475                  00087 V1_24: 
                      00088     ;проверка на равенство Wл = 25% при калибровке
0475   303F           00089     movlw   b'00111111' ;1.24V (Wл = 25%)
0476   061E           00090     xorwf   ADRESH,W
0477   1903           00091     btfsc   STATUS,Z
0478   2???           00092     goto    calEnd            ; напряжение соответствует норме, завершаем калибровку
                      00093     
                      00094     ;проверка на Wл > 25%
0479   081E           00095     movf    ADRESH,W
047A   3EC0           00096     addlw   -.64                    ;нормируем значение
047B   3E40           00097     addlw   -(.255 - .64 + 1) ;проверка на попадание в диапазон 26% <= Wл <= 100%
047C   1C03           00098     btfss   STATUS,C
047D   2???           00099     goto    DAC_dec         ;попали, нужно уменьшить напряжение
                      00100     ;повторим то же самое для диапазона 0% <= Wл <=24%
047E   081E           00101     movf    ADRESH,W
047F   3E00           00102     addlw   -.0
0480   3EC1           00103     addlw   -(.62 - .0 + 1)
0481   1C03           00104     btfss   STATUS,C
0482   2???           00105     goto    DAC_inc
                      00106     
                      00107     ;значение не попало ни в один диапазон, подождем следующего преобразования
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0483   130C           00108     bcf     PIR1,ADIF
0484   110B           00109     bcf     INTCON,T0IF
0485   151F           00110     bsf     ADCON0,2
0486   2???           00111     goto    rollback
                      00112 
0487                  00113 DAC_inc:    ;увелиим буффер для ЦАП на 1
0487   0AAF           00114     incf    DAC_buffer+0,f
0488   082F           00115     movf    DAC_buffer+0,W
0489   1903           00116     btfsc   STATUS,Z
048A   0AB0           00117     incf    DAC_buffer+1,f
048B   1A30           00118     btfsc   DAC_buffer+1,4
048C   2???           00119     goto    DAC_dec
048D   2???           00120     goto    DAC_write
                      00121     
048E                  00122 DAC_dec:    ;уменьшим буфер для ЦАП на 1
048E   1007           00123     bcf     CHANGE_LASER
048F   1A30           00124     btfsc   DAC_buffer+1,4
0490   1407           00125     bsf     CHANGE_LASER
0491   03AF           00126     decf    DAC_buffer+0,f
0492   30FF           00127     movlw   0xFF
0493   062F           00128     xorwf   DAC_buffer+0,W
0494   1D03           00129     btfss   STATUS,Z
0495   2???           00130     goto    DAC_write
0496   03B0           00131     decf    DAC_buffer+1,f
0497                  00132 DAC_write:  ;подготовим буфер к записи в ЦАП
0497   300F           00133     movlw   b'00001111' ;маска для избежания переполнения 
0498   05B0           00134     andwf   DAC_buffer+1,f
0499   3004           00135     movlw   .4
049A   00C8           00136     movwf   temp
049B   082F           00137     movf    DAC_buffer+0,W
049C   00B1           00138     movwf   DAC_temp+0
049D   0830           00139     movf    DAC_buffer+1,W
049E   00B2           00140     movwf   DAC_temp+1
                      00141     
                      00142     
049F                  00143 DAC_rlf: ;приведем число xxxx0000 00000000 к виду 00000000 0000xxxx, так удобнее записывать
049F   0DB1           00144     rlf     DAC_temp+0,f
04A0   0DB2           00145     rlf     DAC_temp+1,f
04A1   0BC8           00146     decfsz  temp,f
04A2   2???           00147     goto    DAC_rlf
04A3   300C           00148     movlw   .12
04A4   00C8           00149     movwf   temp
04A5   1009           00150     bcf     DACON
04A6                  00151 DAC_Write_cycle: ;запишем получившееся число в ЦАП AD5310 
04A6   1109           00152     bcf     DACDIN
04A7   1BB2           00153     btfsc   DAC_temp+1,7
04A8   1509           00154     bsf     DACDIN
04A9   1489           00155     bsf     DACCLK
04AA   1089           00156     bcf     DACCLK
04AB   0DB1           00157     rlf     DAC_temp+0,f
04AC   0DB2           00158     rlf     DAC_temp+1,f
04AD   0BC8           00159     decfsz  temp,f
04AE   2???           00160     goto    DAC_Write_cycle
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00161     
04AF   1409           00162     bsf     DACON
04B0   130C           00163     bcf     PIR1,ADIF
04B1   110B           00164     bcf     INTCON,T0IF
04B2   151F           00165     bsf     ADCON0,2 ;повторим преобразование для проверки получившегося значения на выходе ЦАП
04B3   2???           00166     goto    rollback
                      00167     
                      00168 
04B4                  00169 calEnd: ;калибровка лазера завершена, обнулим бит калибровки лазера,запустим новое преобразование и выйд
                            ем из прерывания
04B4   112E           00170     bcf     cal,2
04B5   130C           00171     bcf     PIR1,ADIF
04B6   14C9           00172     bsf     tmr,1
04B7   2???           00173     goto    rollback
04B8                  00174 TX_check:   ; проверка прерывания от передатчика USART
04B8   1E0C           00175     btfss   PIR1,TXIF
04B9   2???           00176     goto    RX_check
04BA   182D           00177     btfsc   work_done,0     ;если задание выполнено, отправим Welcome - символ
04BB   2???           00178     goto    TX_send_ready   
04BC   19AE           00179     btfsc   cal,3           ;если инициализация завершена, отправим Welcome- символ
04BD   2???           00180     goto    TX_send_ready
                      00181     errorlevel -302
04BE   1683 1303      00182     banksel TXSTA
04C0   1298           00183     bcf     TXSTA,TXEN  ;байт отправлен, закончим передачу
04C1   1283 1303      00184     banksel 0 
04C3   2???           00185     goto    rollback
                      00186     
04C4                  00187 TX_send_ready: ;отправка Welcome-символа ($)
04C4   3024           00188     movlw   0x24    
04C5   0099           00189     movwf   TXREG
04C6   2???           00190     goto    rollback
                      00191 ;-------------------------------------------------------------------------------
                      00192 ;    
                      00193 ;   Узел графа 01
                      00194 ;    
                      00195 ;-------------------------------------------------------------------------------    
04C7                  00196 calX:          ;калибровка двигателя X пока не сработает датчик X = 0
04C7   1C85           00197     btfss   XINPUT
04C8   102E           00198     bcf     cal,0 
04C9   1003           00199     bcf     STATUS,C
04CA   0D86           00200     rlf     PORTB,f
04CB   1803           00201     btfsc   STATUS,C
04CC   1406           00202     bsf     PORTB,0
04CD   110B           00203     bcf     INTCON,T0IF
04CE   2???           00204     goto    rollback
                      00205 
04CF                  00206 calY:       ;калибровка двигателя Y пока не сработает датчик Y = 0
04CF   1E05           00207     btfss   YINPUT
04D0   10AE           00208     bcf     cal,1 
04D1   1003           00209     bcf     STATUS,C
04D2   0D88           00210     rlf     PORTD,f
04D3   1803           00211     btfsc   STATUS,C
04D4   1408           00212     bsf     PORTD,0
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04D5   110B           00213     bcf     INTCON,T0IF
04D6   2???           00214     goto    rollback
                      00215 ;-------------------------------------------------------------------------------
                      00216 ;    
                      00217 ;   Конец узла 01
                      00218 ;    
                      00219 ;------------------------------------------------------------------------------- 
                      00220 ;-------------------------------------------------------------------------------
                      00221 ;    
                      00222 ;   Узел графа 03
                      00223 ;    
                      00224 ;-------------------------------------------------------------------------------
04D7                  00225 calLaser:   ;запуск преобразования АЦП
04D7   130C           00226     bcf     PIR1,ADIF
04D8   14C9           00227     bsf     tmr,1
04D9   1C49           00228     btfss   tmr,0         ;было ли прерывание от TMR1
04DA   2???           00229     goto    rollback
04DB   1049           00230     bcf     tmr,0
04DC   1D1F           00231     btfss   ADCON0,2
04DD   151F           00232     bsf     ADCON0,2
04DE   100C           00233     bcf     PIR1,TMR1IF
04DF   2???           00234     goto    rollback
                      00235 ;-------------------------------------------------------------------------------
                      00236 ;    
                      00237 ;   Конец узла 03
                      00238 ;    
                      00239 ;-------------------------------------------------------------------------------    
04E0                  00240 RX_check:   ;проверка прерывания от приемника USART
04E0   1A8C           00241     btfsc   PIR1,RCIF   ;было ли прерывание от приемника USART
04E1   1E8C           00242     btfss   PIE1,RCIE   ;разрешено ли прерывание
04E2   2???           00243     goto    RX_skip
04E3   1CA0           00244     btfss   Flags,1         ;выполняется ли работа
04E4   2???           00245     goto    RX_read         ;не выполняется, примем байт
                      00246     ;работа выполняется, пошлем отказ
                      00247     errorlevel -302
04E5   1683 1303      00248     banksel TXSTA
04E7   1698           00249     bsf     TXSTA,TXEN
04E8   1283 1303      00250     banksel TXREG
04EA   3021           00251     movlw   0x21
04EB   0099           00252     movwf   TXREG
04EC   0099           00253     movwf   TXREG
                      00254     errorlevel +302
04ED   081A           00255     movf    RCREG,W
04EE   2???           00256     goto    rollback
                      00257     ;приемник включается установкой RCSTA,CREN в 1
                      00258     ;флаг RCIF сбрасывается при чтении из RCREG
                      00259     ;при переполнении буфера бит RCSTA,OERR (1) устанавливается в 1
                      00260     ;бит OERR очищается сбросом бита CREN (запрет приема)
                      00261     ;бит ошибки кадра RCSTA,FERR устанавливается если не обнаружен стоповый бит
                      00262     ;рекомендуется сначала читать RCSTA затем RCREG чтобы не потерять 9 бит и FERR
04EF                  00263 RX_read:        ;проверка флагов USART
04EF   1C98           00264     btfss   RCSTA,OERR
04F0   2???           00265     goto    NO_overflow_err
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04F1   1218           00266     bcf     RCSTA,CREN
04F2   1420           00267     bsf     Flags,0
04F3   081A           00268     movf    RCREG,W
04F4   00AA           00269     movwf   buffer+0
04F5   081A           00270     movf    RCREG,W
04F6   00AB           00271     movwf   buffer+1
04F7   1520           00272     bsf     Flags,2
04F8   1618           00273     bsf     RCSTA,CREN
04F9   0AAC           00274     incf    counter,f
04FA   0AAC           00275     incf    counter,f
04FB   2???           00276     goto    rollback
04FC                  00277 NO_overflow_err: ;не было переполнения буфера USART, читаем байт во временный буффер
04FC   081A           00278     movf    RCREG,W
04FD   00AA           00279     movwf   buffer+0
04FE   1103           00280     bcf     STATUS,Z
04FF   3A20           00281     xorlw   0x20        ;если принят пробел (0x20) - игнорируем
0500   1903           00282     btfsc   STATUS,Z
0501   2???           00283     goto    delimitter
0502   1520           00284     bsf     Flags,2
0503   0AAC           00285     incf    counter,f
0504   2???           00286     goto    rollback
0505                  00287 delimitter:     ;принят пробел, очистим буфер
0505   01AA           00288     clrf    buffer+0
0506   2???           00289     goto    rollback
0507                  00290 RX_skip:
0507   2???           00291     goto    rollback
                      00292 ;-------------------------------------------------------------------------------
                      00293 ;    
                      00294 ;   Узел графа 02
                      00295 ;    
                      00296 ;-------------------------------------------------------------------------------    
0508                  00297 Command_move:   ;отработка команд ШД
0508   1A20           00298     btfsc   Flags,4
0509   2???           00299     goto    Both    ;нужно двигать оба двигателя
050A   1EA0           00300     btfss   Flags,5
050B   2???           00301     goto    Solo_Plus ;Нужно двигать один двигатель по часовой
050C                  00302 Solo_minus: ;поворот двигателя X против часовой стрелки, сюда попадаем если ни одно из условий выше не в
                            ыполнено
050C   19A0           00303     btfsc   Flags,3 ;если Флаг двигателя Y установлен, выполним переход, иначе обрабатываем вращение ШД 
                            X 
050D   2???           00304     goto    Solo_minusY 
050E   1003           00305     bcf     STATUS,C
050F   0C86           00306     rrf     PORTB,f
0510   1803           00307     btfsc   STATUS,C
0511   1786           00308     bsf     PORTB,7
0512   2???           00309     goto    Count
                      00310     
0513                  00311 Solo_minusY:    ;обработка движения ШД Y против часовой стрелки
0513   1003           00312     bcf     STATUS,C
0514   0C88           00313     rrf     PORTD,f
0515   1803           00314     btfsc   STATUS,C
0516   1788           00315     bsf     PORTD,7
0517   2???           00316     goto    Count
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00317     
                      00318     
0518                  00319 Solo_Plus: ;поворот двигателя X по часовой стрелке
0518   19A0           00320     btfsc   Flags,3
0519   2???           00321     goto    SoloPlusY
051A   1003           00322     bcf     STATUS,C
051B   0D86           00323     rlf     PORTB,f
051C   1803           00324     btfsc   STATUS,C
051D   1406           00325     bsf     PORTB,0
051E   2???           00326     goto    Count
051F                  00327 SoloPlusY: ;поворот двигателя Y по часовой стрелке
051F   1003           00328     bcf     STATUS,C
0520   0D88           00329     rlf     PORTD,f
0521   1803           00330     btfsc   STATUS,C
0522   1408           00331     bsf     PORTD,0
0523   2???           00332     goto    Count
0524                  00333 Both: ;поворот двигателей X и Y
0524   0820           00334     movf    Flags,W
0525   3960           00335     andlw   b'01100000' ;маска для исключения лишних бит
0526   1103           00336     bcf     STATUS,Z
0527   3A00           00337     xorlw   b'00000000' ;если задание Z +
0528   1903           00338     btfsc   STATUS,Z
0529   2???           00339     goto    Plus_both
052A   3A60           00340     xorlw   b'00000000' ^ b'01100000' ;если задание Z -
052B   1903           00341     btfsc   STATUS,Z
052C   2???           00342     goto    Minus_both
052D   3A40           00343     xorlw   b'01100000' ^ b'00100000' ;если задание F +
052E   1903           00344     btfsc   STATUS,Z
052F   2???           00345     goto    XPlusYMinus
0530   3A60           00346     xorlw   b'00100000' ^ b'01000000' ;если задание F - 
0531   1903           00347     btfsc   STATUS,Z
0532   2???           00348     goto    YPlusXMinus
                      00349     
0533                  00350 Plus_both: ;Z+
0533   1003           00351     bcf     STATUS,C
0534   0D86           00352     rlf     PORTB,f
0535   1803           00353     btfsc   STATUS,C
0536   1406           00354     bsf     PORTB,0
0537   1003           00355     bcf     STATUS,C
0538   0D88           00356     rlf     PORTD,f
0539   1803           00357     btfsc   STATUS,C
053A   1408           00358     bsf     PORTD,0
053B   2???           00359     goto    Count
                      00360     
053C                  00361 Minus_both: ;Z-
053C   1003           00362     bcf     STATUS,C
053D   0C86           00363     rrf     PORTB,f
053E   1803           00364     btfsc   STATUS,C
053F   1786           00365     bsf     PORTB,7
0540   1003           00366     bcf     STATUS,C
0541   0C88           00367     rrf     PORTD,f
0542   1803           00368     btfsc   STATUS,C
0543   1788           00369     bsf     PORTD,7
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0544   2???           00370     goto    Count
                      00371     
0545                  00372 XPlusYMinus: ;F+
0545   1003           00373     bcf     STATUS,C
0546   0D86           00374     rlf     PORTB,f
0547   1803           00375     btfsc   STATUS,C
0548   1406           00376     bsf     PORTB,0
0549   1003           00377     bcf     STATUS,C
054A   0C88           00378     rrf     PORTD,f
054B   1803           00379     btfsc   STATUS,C
054C   1788           00380     bsf     PORTD,7
054D   2???           00381     goto    Count
                      00382     
054E                  00383 YPlusXMinus: ;F-
054E   1003           00384     bcf     STATUS,C
054F   0C86           00385     rrf     PORTB,f
0550   1803           00386     btfsc   STATUS,C
0551   1786           00387     bsf     PORTB,7
0552   1003           00388     bcf     STATUS,C
0553   1003           00389     bcf     STATUS,C
0554   0D88           00390     rlf     PORTD,f
0555   1803           00391     btfsc   STATUS,C
0556   1408           00392     bsf     PORTD,0
0557   2???           00393     goto    Count
                      00394     
0558                  00395 Count: ;двухбайтный счетчик оставшихся шагов
                      00396     
0558   3000           00397     movlw   0x00 
0559   1103           00398     bcf     STATUS,Z
055A   0622           00399     xorwf   MOVEcmd+0,W
055B   1D03           00400     btfss   STATUS,Z
055C   2???           00401     goto    _NEXT_LOOP0
                      00402     ;comf  MOVEcmd+0,f
055D                  00403 dec_H:  ;если младший байт обратился в 0xFF, вычтем из старшего единицу
055D   3000           00404     movlw   0x0
055E   1103           00405     bcf     STATUS,Z
055F   0623           00406     xorwf   MOVEcmd+1,W
0560   1D03           00407     btfss   STATUS,Z
0561   2???           00408     goto    LoadLowByte
0562   142D           00409     bsf     work_done,0 ;если в старшем байте 0, счет закончен. очистим счетчик и установим флаг
0563   01A2           00410     clrf     MOVEcmd+0
0564   01A3           00411     clrf    MOVEcmd+1
0565   110B           00412     bcf     INTCON,T0IF
0566   10A0           00413     bcf     Flags, 1
0567   2???           00414     goto    rollback
0568                  00415 LoadLowByte: ;если в старшем байте число отличное от 0, вычтем из него 1
0568   03A3           00416     decf    MOVEcmd+1,f
0569   03A2           00417     decf    MOVEcmd+0,f
                      00418     
056A                  00419 _NEXT_LOOP0:
056A   03A2           00420     decf    MOVEcmd+0,f
056B                  00421 _NEXT_LOOP: ;следующий цикл, включим/выключим лазер по потребности и сбросим флаг прерывания TMR1
                      00422     
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00423     
056B   1BA0           00424     btfsc   Flags,7
056C   1685           00425     bsf     PORTA,5
056D   1FA0           00426     btfss   Flags,7
056E   1285           00427     bcf     PORTA,5
056F   110B           00428     bcf     INTCON,T0IF
0570   2???           00429     goto    rollback
                      00430 ;-------------------------------------------------------------------------------
                      00431 ;    
                      00432 ;   Узел графа 00
                      00433 ;    
                      00434 ;-------------------------------------------------------------------------------                        
                             
                      00435 ;------------------------------------------------------------------------------- 
0571                  00436 rollback:                       ; выход и прерывания и восстановление контекста
                      00437     
                      00438 
                      00439     
                      00440                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00441                                  ;при условии использования косвенной адресации:
0571   0804           00442     movf        FSR,W            ;запись содержимого регистра FSR в
0572   00F4           00443     movwf       FSR_prer         ;регистр FSR_prer
0573   0873           00444     movf        FSR_osn,W        ;запись содержимого регистра FSR_osn в
0574   0084           00445     movwf       FSR              ;регистр FSR
                      00446                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00447 
                      00448                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00449                                  ;при условии сохранения регистра PCLATH:
0575   0872           00450     movf        PCLATH_TEMP,W    ;восстановление содержимого регистра PCLATH
0576   008A           00451     movwf       PCLATH           ;
                      00452                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00453 
0577   0E71           00454     swapf       STATUS_TEMP,W    ;восстановление содержимого регистра STATUS
0578   0083           00455     movwf       STATUS
                      00456 
0579   0EF0           00457     swapf       W_TEMP_,F         ;восстановление содержимого аккумулятора W
057A   0E70           00458     swapf       W_TEMP_,W
                      00459     
057B   0009           00460     retfie
                      00461     #include "Memory.inc"
                      00050 ;*******************************************************************************
                      00051 ;
                      00052 ;       ПЕРЕМЕННЫЕ
                      00053 ;
                      00054 ;*******************************************************************************
                      00055     cblock  0x20
  00000020            00056         Flags       ;регистр флагов 
  00000021            00057         XYZFcmd     ;регистр выбора направления движения
  00000022            00058         MOVEcmd :2  ;регистр количества шагов
  00000024            00059         DIRcmd      ;регистр выбора направления
  00000025            00060         LASERcmd    ;регистр включения лазера
  00000026            00061         var :4      ;регистр временного хранения количества шагов
  0000002A            00062         buffer :2   ;буфер для промежуточного хранения
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002C            00063         counter     ;счетчик принятых байт
  0000002D            00064         work_done   ; сделана ли работа прерывающей программой
  0000002E            00065         cal         ;задание на калибровку
  0000002F            00066         DAC_buffer :2 ;буффер для ЦАП
  00000031            00067         DAC_temp :2 ;временный регистр для записи в ЦАП
                      00068     endc            ;0x39
                      00069     cblock      0x45        ; регистры для задержки
  00000045            00070         d1
  00000046            00071         d2
  00000047            00072         d3
                      00073     endc                    ;0x47
  00000048            00074 temp equ  0x48              ; временный буфффер
  00000049            00075 tmr  equ  0x49              ; регистр состояния прерывания tmr1
                      00076     cblock      0x70 ;Регистры для сохранения контекста при обработке прерывания
  00000070            00077         W_TEMP_
  00000071            00078         STATUS_TEMP
  00000072            00079         PCLATH_TEMP
  00000073            00080         FSR_osn
  00000074            00081         FSR_prer
                      00082     endc           ;0x74
                      00083     
                      00084     ;Flags 00000000
                      00085     ;      ||||||||
                      00086     ;      |||||||-----Произошла переполнения буфера (OERR)               bit 0
                      00087     ;      ||||||------Разрешение обрабатывать задание для прерывания     bit 1
                      00088     ;      |||||-------Принят байт, требуется обработка                   bit 2
                      00089     ;      ||||--------Двигатель X/Y(0/1)                                 bit 3
                      00090     ;      |||---------Оба двигателя (диагональ)                          bit 4
                      00091     ;      ||----------Комбинация направления(мл. бит)                    bit 5
                      00092     ;      |-----------Комбинация направления(ст. бит)                    bit 6
                      00093     ;      ------------Выкл/Вкл лазер (0/1)                               bit 7
                      00094     ;Комбинация направления:
                      00095     ;00 - по часовой оба                 (/ снизу вверх)
                      00096     ;01 - по часовой X, Y против часовой (\ сверху вниз) 
                      00097     ;10 - X против часовой, Y по часовой (\ снизу ввверх)
                      00098     ;11 - против часовой оба             (/сверху вниз)
                      00380 #include "Memory.inc"
                      00099 ;*******************************************************************************
                      00100 ;
                      00101 ;       ПЕРЕМЕННЫЕ
                      00102 ;
                      00103 ;*******************************************************************************
                      00104     cblock  0x20
  00000020            00105         Flags       ;регистр флагов 
  00000021            00106         XYZFcmd     ;регистр выбора направления движения
  00000022            00107         MOVEcmd :2  ;регистр количества шагов
  00000024            00108         DIRcmd      ;регистр выбора направления
  00000025            00109         LASERcmd    ;регистр включения лазера
  00000026            00110         var :4      ;регистр временного хранения количества шагов
  0000002A            00111         buffer :2   ;буфер для промежуточного хранения
  0000002C            00112         counter     ;счетчик принятых байт
  0000002D            00113         work_done   ; сделана ли работа прерывающей программой
  0000002E            00114         cal         ;задание на калибровку
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002F            00115         DAC_buffer :2 ;буффер для ЦАП
  00000031            00116         DAC_temp :2 ;временный регистр для записи в ЦАП
                      00117     endc            ;0x39
                      00118     cblock      0x45        ; регистры для задержки
  00000045            00119         d1
  00000046            00120         d2
  00000047            00121         d3
                      00122     endc                    ;0x47
  00000048            00123 temp equ  0x48              ; временный буфффер
  00000049            00124 tmr  equ  0x49              ; регистр состояния прерывания tmr1
                      00125     cblock      0x70 ;Регистры для сохранения контекста при обработке прерывания
  00000070            00126         W_TEMP_
  00000071            00127         STATUS_TEMP
  00000072            00128         PCLATH_TEMP
  00000073            00129         FSR_osn
  00000074            00130         FSR_prer
                      00131     endc           ;0x74
                      00132     
                      00133     ;Flags 00000000
                      00134     ;      ||||||||
                      00135     ;      |||||||-----Произошла переполнения буфера (OERR)               bit 0
                      00136     ;      ||||||------Разрешение обрабатывать задание для прерывания     bit 1
                      00137     ;      |||||-------Принят байт, требуется обработка                   bit 2
                      00138     ;      ||||--------Двигатель X/Y(0/1)                                 bit 3
                      00139     ;      |||---------Оба двигателя (диагональ)                          bit 4
                      00140     ;      ||----------Комбинация направления(мл. бит)                    bit 5
                      00141     ;      |-----------Комбинация направления(ст. бит)                    bit 6
                      00142     ;      ------------Выкл/Вкл лазер (0/1)                               bit 7
                      00143     ;Комбинация направления:
                      00144     ;00 - по часовой оба                 (/ снизу вверх)
                      00145     ;01 - по часовой X, Y против часовой (\ сверху вниз) 
                      00146     ;10 - X против часовой, Y по часовой (\ снизу ввверх)
                      00147     ;11 - против часовой оба             (/сверху вниз)
3F3A                  00381     end
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCS2                             00000006
ADC_check                         00000462
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BLX                               PORTB,1
BLY                               PORTD,5
BRGH                              00000002
BRX                               PORTB,2
BRY                               PORTD,6
Both                              00000524
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

CCPR2L                            0000001B
CHANGE_LASER                      PORTC,0
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CIS                               00000003
CKE                               00000006
CKP                               00000004
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000009C
CMIE                              00000006
CMIF                              00000006
CREN                              00000004
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            0000009D
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
Calc                              00000400
Command_move                      00000508
Count                             00000558
D                                 00000005
DACCLK                            PORTE,1
DACDIN                            PORTE,2
DACON                             PORTE,0
DAC_Write_cycle                   000004A6
DAC_buffer                        0000002F
DAC_dec                           0000048E
DAC_inc                           00000487
DAC_rlf                           0000049F
DAC_temp                          00000031
DAC_write                         00000497
DATA_ADDRESS                      00000005
DC                                00000001
DIRcmd                            00000024
D_A                               00000005
D_NOT_A                           00000005
Detect_direction                  000000AD
Detect_laser                      000000B8
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
FSR_osn                           00000073
FSR_prer                          00000074
F_symbol                          000000AB
Flags                             00000020
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
Got_XYZF                          00000040
Got_command                       00000065
Got_dir                           00000053
Got_laser                         00000056
Got_move1                         00000043
Got_move2                         00000047
Got_move3                         0000004B
Got_move4                         0000004F
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Interrupt                         00000440
LASERcmd                          00000025
LoadLowByte                       00000568
MOVEcmd                           00000022
Minus_both                        0000053C
Minus_setup                       000000B2
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

NO_overflow_err                   000004FC
Next_byte                         00000059
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
One_byte                          00000023
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCLATH_TEMP                       00000072
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Plus_both                         00000533
Plus_setup                        000000B6
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
RX_check                          000004E0
RX_read                           000004EF
RX_skip                           00000507
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STATUS_TEMP                       00000071
SYNC                              00000004
SoloPlusY                         0000051F
Solo_Plus                         00000518
Solo_minus                        0000050C
Solo_minusY                       00000513
Step_counter1                     0000006A
Step_counter2                     00000077
Step_counter3                     00000086
Step_counter4                     00000090
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TLX                               PORTB,3
TLY                               PORTD,7
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR0_check                        0000044B
TMR0_skip                         0000045B
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR1_check                        0000045B
TMR1_skip                         00000462
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TRX                               PORTB,0
TRY                               PORTD,4
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
TX_check                          000004B8
TX_send_ready                     000004C4
Two_bytes                         0000005F
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

UA                                00000001
USART_cycle                       0000001F
USART_ready                       00000017
V1_24                             00000475
V5_0                              0000046A
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
W_TEMP_                           00000070
Wait                              000000BE
Work                              00000095
X                                 000000A4
XINPUT                            PORTA,1
XPlusYMinus                       00000545
XYZFcmd                           00000021
Y                                 000000A6
YINPUT                            PORTA,4
YPlusXMinus                       0000054E
Z                                 00000002
Z_symbol                          000000A8
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00001FFF
_CP_OFF                           00003FFF
_CP_ON                            00001FFF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_NEXT_LOOP                        0000056B
_NEXT_LOOP0                       0000056A
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
MPASM 5.84                          MAIN.ASM   5-6-2020  20:21:29         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FFD
__16F877A                         00000001
buffer                            0000002A
cal                               0000002E
calEnd                            000004B4
calLaser                          000004D7
calX                              000004C7
calY                              000004CF
calibration                       00000008
counter                           0000002C
d1                                00000045
d2                                00000046
d3                                00000047
dec_H                             0000055D
delimitter                        00000505
init                              0000040F
rollback                          00000571
start                             00000005
temp                              00000048
tmr                               00000049
var                               00000026
work_done                         0000002D

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,    20 suppressed

